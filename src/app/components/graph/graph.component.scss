@use '~@angular/material' as mat;

:host {
  display: block;
  height: 100%;
}

@mixin graph-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $foreground: map-get($theme, foreground);

  .graph {
    width: 100%;
    height: 100%;
    touch-action: none;
  }

  .graph-tool-container {
    position: absolute;
    left: 0.5rem;
    top: 0.5rem;
    right: 0.5rem;
    text-align: right;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: wrap;
    pointer-events: none;

    * {
      pointer-events: all;
    }

    > mat-slide-toggle {
      margin-left: 0.5rem;
      margin-right: 0.5rem;
    }

    .help-icon {
      padding: 8px;
    }
  }

  @media screen and (max-width: 800px) {
    .graph-tool-container {
      position: absolute;
      left: 0.25rem;
      top: 0.2rem;
      right: 0.25rem;

      .automatic-layout-toggle {
        display: none;
      }
    }
  }

  .create-node-button {
    position: absolute;
    right: 1rem;
    bottom: 1rem;
  }

  .link {
    stroke: mat.get-color-from-palette($accent);
    stroke-width: 4px;
    fill: none;

    &.hidden {
      stroke-width: 0;
    }

    &.draggable {
      stroke: mat.get-color-from-palette($accent, darker);
      stroke-dasharray: 8px 2px;
      pointer-events: none;
    }
  }

  .clickbox {
    stroke: rgba($color: #000000, $alpha: 0);
    stroke-width: 16px;
    fill: none;
    cursor: pointer;
  }

  .arrow {
    fill: mat.get-color-from-palette($accent);

    &.draggable {
      fill: mat.get-color-from-palette($accent, darker);
    }
  }

  .node {
    fill: mat.get-color-from-palette($primary);
    stroke: none;
    cursor: pointer;
  }

  .link-details,
  .node-details {
    fill: mat.get-color-from-palette($foreground, text);
    text-anchor: middle;
  }

  .node-id {
    pointer-events: none;
    fill: mat.get-color-from-palette($primary, default-contrast);
    text-anchor: middle;
  }
}
